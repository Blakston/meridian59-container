const createConfig=(method,params)=>({method:method,headers:{accept:"application/json","content-type":"application/json"},body:JSON.stringify(params)});class Component{constructor(){this.state={}}emit(event,data){window.dispatchEvent(new CustomEvent(event,{detail:{output:data}}))}getState(key){return this.state[key]}on(event,fn){window.addEventListener(event,e=>{fn(e.detail.output)})}setState(key,val){this.state[key]=val}}class Model extends Component{constructor(){super(),this.on("Show",async params=>{let config=createConfig("POST",params);fetch("http://127.0.0.1/api/accounts/show",config).then(response=>response.json()).then(data=>{this.emit("Show done",data)}).catch(err=>{this.emit("Show error",err)})})}}class ViewModel extends Component{constructor(){super(),this.on("Show done",data=>{this.setState("Show result",data)})}Show(data){this.emit("Show",data)}}class View extends Component{constructor(viewModel){super(),this.viewModel=viewModel,this.on("Show done",data=>{this.render()}),this.on("Show error",err=>{this.render()}),this.render()}render(){let show=this.viewModel.getState("Show result");void 0===show&&(show=[]);let showHtml=document.querySelector("#online");showHtml.innerHTML="",show.forEach(toonName=>{let p=document.createElement("p");p.innerText=toonName,showHtml.appendChild(p)}),document.querySelector("#online").innerHTML=show;let self=this;document.querySelector("#create").addEventListener("click",evt=>{evt.preventDefault(),document.querySelector("#user").value="",document.querySelector("#pass").value="",document.querySelector("#pass2").value=""}),reloadInterval||(reloadInterval=setInterval(()=>{self.viewModel.Show()},1e4))}}let reloadInterval;const model=new Model,viewModel=new ViewModel,view=new View(viewModel);